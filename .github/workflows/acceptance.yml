---
name: acceptance tests
on: pull_request

concurrency:
  group: acceptance-${{ github.event.repository.name }}

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      source: ${{ steps.filter.outputs.source }}
    steps:
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          predicate-quantifier: every
          filters: |
            source:
              - '**/*.go'
              - '*/go.mod'
              - 'src/Dockerfile'
              - '!src/**/*_test.go'

  acceptance:
    if: ${{ needs.changes.outputs.source == 'true' }}
    runs-on: ubuntu-latest
    needs:
      - changes
    strategy:
      matrix:
        k8s-flavour:
          - eks-cilium
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: hashicorp/setup-terraform@v3
      - run: FLAVOUR=${{ matrix.k8s-flavour }} make env
      - run: kubectl get no
      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: latest-tag
        with:
          semver_only: false
      - uses: actions/setup-go@v3
        with:
          go-version: stable
          check-latest: true
      - run: make deploy
        env:
          TAG: ${{ steps.latest-tag.outputs.tag }}
          IMAGE: ghcr.io/cornbuddy/${{ github.event.repository.name }}
      - run: make smoke

  approve-pull-request:
    if: |
      always()
      && !contains(needs.*.result, 'failure')
      && !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest
    needs:
      - acceptance
    steps:
      - uses: actions/checkout@v4
      - run: gh pr review "${{ github.event.number }}" --approve
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  clean:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - acceptance
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v3
        with:
          go-version: stable
          check-latest: true
      - uses: nick-fields/retry@v2
        with:
          timeout_minutes: 15
          max_attempts: 2
          command: make clean
