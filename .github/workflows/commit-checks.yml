---
name: commit checks
on:
  push:
    branches:
      - "*"
      - "*/*"
      - "!main"

concurrency:
  group: commit-checks-${{ github.event.repository.name }}-${{ github.ref }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: stable
          check-latest: true
      - uses: actions/setup-python@v4
        with:
          update-environment: false
      - uses: pre-commit/action@v3.0.0

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v3
        with:
          go-version: stable
          check-latest: true
      - run: go install sigs.k8s.io/controller-runtime/tools/setup-envtest@latest
      - run: make test

  release-candidate:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    env:
      IMAGE: ghcr.io/cornbuddy/${{ github.event.repository.name }}
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: mathieudutour/github-tag-action@v6.2
        id: tag
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag.outputs.new_tag }}
          name: ${{ steps.tag.outputs.new_tag }}
          body: ${{ steps.tag.outputs.changelog }}
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: make docker
        env:
          TAG: ${{ steps.tag.outputs.new_tag }}

  submit-pull-request:
    runs-on: ubuntu-latest
    permissions: write-all
    needs:
      - release-candidate
    steps:
      - uses: actions/checkout@v4
      - run: >-
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          >> $GITHUB_OUTPUT
        id: extract_branch
      - run: |
          gh pr create \
          --base main \
          --head "${{ steps.extract_branch.outputs.branch }}" \
          --fill-first || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
