---
name: commit checks
on:
  push:
    branches:
      - "*"
      - "*/*"
      - "!main"

concurrency:
  group: "commit-checks-${{ github.event.repository.name }}-${{ github.ref }}"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: 'stable'
          check-latest: true
      - uses: ahova/infrastructure/.github/actions/pre-commit@main

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v3
        with:
          go-version: 'stable'
          check-latest: true
      - run: make test

  release-candidate:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    needs:
      - lint
      - test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: calculate tag for docker image
        uses: mathieudutour/github-tag-action@v6.1
        id: tag
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true
      - uses: ahova/infrastructure/.github/actions/docker-buildx@main
        with:
          context: src/
          version: ${{ steps.tag.outputs.new_tag }}
          repository: ${{ github.event.repository.name }}
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
      - uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          release_branches: "main"
      - run: >-
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          >> $GITHUB_OUTPUT
        id: extract_branch
      - run: |
          branch="${{ steps.extract_branch.outputs.branch }}"
          gh pr create \
          --base main \
          --head "$branch" \
          --fill-first || true
          number="$(gh pr view "$branch" --json number --jq .number)"
          gh pr edit "$number" --add-label "help wanted"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
